generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id          Int      @id @default(autoincrement())
  name        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  createdById String
  createdBy   User     @relation(fields: [createdById], references: [id])

  @@index([name])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          Role      @default(USER)
  accounts      Account[]
  posts         Post[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model item_order {
  order_uid String @db.Uuid
  item_uid  String @db.Uuid
  quantity  BigInt
  items     items  @relation(fields: [item_uid], references: [item_uid], onDelete: NoAction, onUpdate: NoAction)
  orders    orders @relation(fields: [order_uid], references: [order_uid], onDelete: NoAction, onUpdate: NoAction)

  @@id([order_uid, item_uid])
}

model items {
  item_uid   String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name       String       @unique
  price      Decimal      @db.Decimal(15, 3)
  inventory  Decimal?     @db.Decimal(15, 0)
  deleted     Boolean @default(false)
  item_order item_order[]
  created_at DateTime     @db.Timestamptz()
}

model orders {
  order_uid         String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  date              DateTime     @db.Timestamptz()
  amount_due        Decimal      @db.Decimal(15, 3)
  paid    Boolean @default(false)
  payment_mode      Payment_mode?
  delivery_mode     Delivery_mode
  note              String?
  deleted     Boolean @default(false)
  user_uid          String?      @db.Uuid
  item_order        item_order[]
  users             users?       @relation(fields: [user_uid], references: [user_uid], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  user_uid    String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  first_name  String
  last_name   String?
  contact_num String   @unique @db.Char(11)
  address     String?
  deleted     Boolean @default(false)
  orders      orders[]
}

enum Role {
  USER
  ADMIN
  SUPERADMIN
}

enum Payment_mode {
  Gcash
  Cash
  BPI
}

enum Delivery_mode {
  Pickup
  Delivery
}
